{"ast":null,"code":"import consumer from \"./consumer\";\nvar chatRoomChannel = consumer.subscriptions.create(\"ChatRoomChannel\", {\n  connected: function connected() {\n    console.log(\"Connected to the chat room!\");\n    $(\"#modal\").css('display', 'flex');\n  },\n  disconnected: function disconnected() {},\n  received: function received(data) {\n    if (data.message) {\n      var current_name = sessionStorage.getItem('chat_room_name');\n      var msg_class = data.sent_by === current_name ? \"sent\" : \"received\";\n      $('#messages').append(\"<p class='\".concat(msg_class, \"'>\") + data.message + '</p>');\n    } else if (data.chat_room_name) {\n      var name = data.chat_room_name;\n      var announcement_type = data.type == 'join' ? 'joined' : 'left';\n      $('#messages').append(\"<p class=\\\"announce\\\"><em>\".concat(name, \"</em> \").concat(announcement_type, \" the room</p>\"));\n    }\n  },\n  speak: function speak(message) {\n    var name = sessionStorage.getItem('chat_room_name');\n    console.log(name);\n    console.log(message);\n    this.perform('speak', {\n      message: message,\n      name: name\n    });\n  },\n  announce: function announce(content) {\n    this.perform('announce', {\n      name: content.name,\n      type: content.type\n    });\n  }\n});\nexport default chatRoomChannel;","map":{"version":3,"sources":["D:/Coding/Rails/newchatapp/app/javascript/channels/chat_room_channel.js"],"names":["consumer","chatRoomChannel","subscriptions","create","connected","console","log","$","css","disconnected","received","data","message","current_name","sessionStorage","getItem","msg_class","sent_by","append","chat_room_name","name","announcement_type","type","speak","perform","announce","content"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,eAAe,GAAGD,QAAQ,CAACE,aAAT,CAAuBC,MAAvB,CAA8B,iBAA9B,EAAiD;AACvEC,EAAAA,SADuE,uBAC3D;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAC,IAAAA,CAAC,CAAC,QAAD,CAAD,CAAYC,GAAZ,CAAgB,SAAhB,EAA2B,MAA3B;AACD,GAJsE;AAMvEC,EAAAA,YANuE,0BAMxD,CAEd,CARsE;AAUvEC,EAAAA,QAVuE,oBAU9DC,IAV8D,EAUxD;AACb,QAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,UAAIC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAnB;AACA,UAAIC,SAAS,GAAGL,IAAI,CAACM,OAAL,KAAiBJ,YAAjB,GAAgC,MAAhC,GAAyC,UAAzD;AACAN,MAAAA,CAAC,CAAC,WAAD,CAAD,CAAeW,MAAf,CAAsB,oBAAaF,SAAb,UAA6BL,IAAI,CAACC,OAAlC,GAA4C,MAAlE;AACD,KAJD,MAIO,IAAGD,IAAI,CAACQ,cAAR,EAAwB;AAC7B,UAAIC,IAAI,GAAGT,IAAI,CAACQ,cAAhB;AACA,UAAIE,iBAAiB,GAAGV,IAAI,CAACW,IAAL,IAAa,MAAb,GAAsB,QAAtB,GAAiC,MAAzD;AACAf,MAAAA,CAAC,CAAC,WAAD,CAAD,CAAeW,MAAf,qCAAiDE,IAAjD,mBAA8DC,iBAA9D;AACD;AACF,GApBsE;AAsBvEE,EAAAA,KAtBuE,iBAsBjEX,OAtBiE,EAsBxD;AACb,QAAIQ,IAAI,GAAGN,cAAc,CAACC,OAAf,CAAuB,gBAAvB,CAAX;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACA,SAAKY,OAAL,CAAa,OAAb,EAAsB;AAAEZ,MAAAA,OAAO,EAAPA,OAAF;AAAWQ,MAAAA,IAAI,EAAJA;AAAX,KAAtB;AACD,GA3BsE;AA6BvEK,EAAAA,QA7BuE,oBA6B9DC,OA7B8D,EA6BrD;AAChB,SAAKF,OAAL,CAAa,UAAb,EAAyB;AAAEJ,MAAAA,IAAI,EAAEM,OAAO,CAACN,IAAhB;AAAsBE,MAAAA,IAAI,EAAEI,OAAO,CAACJ;AAApC,KAAzB;AACD;AA/BsE,CAAjD,CAAxB;AAkCA,eAAerB,eAAf","sourcesContent":["import consumer from \"./consumer\"\n\nconst chatRoomChannel = consumer.subscriptions.create(\"ChatRoomChannel\", {\n  connected() {\n    console.log(\"Connected to the chat room!\");\n    $(\"#modal\").css('display', 'flex');\n  },\n\n  disconnected() {\n\n  },\n\n  received(data) {\n    if (data.message) {\n      let current_name = sessionStorage.getItem('chat_room_name')\n      let msg_class = data.sent_by === current_name ? \"sent\" : \"received\"\n      $('#messages').append(`<p class='${msg_class}'>` + data.message + '</p>')\n    } else if(data.chat_room_name) {\n      let name = data.chat_room_name;\n      let announcement_type = data.type == 'join' ? 'joined' : 'left';\n      $('#messages').append(`<p class=\"announce\"><em>${name}</em> ${announcement_type} the room</p>`)\n    }\n  },\n\n  speak(message) {\n    let name = sessionStorage.getItem('chat_room_name')\n    console.log(name)\n    console.log(message)\n    this.perform('speak', { message, name })\n  },\n\n  announce(content) {\n    this.perform('announce', { name: content.name, type: content.type })\n  }\n});\n\nexport default chatRoomChannel;"]},"metadata":{},"sourceType":"module"}